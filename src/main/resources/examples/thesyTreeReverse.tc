include "Tree"
include "TreeDefs"
include "List"
include "ListDefs"
include "Utils"
include "UtilsDefs"

Cons ?x ?l >> x :: l [typedlet]
?x :: ?l >> Cons ?x ?l [notypes]
snoc ?l ?x >> l :+ x [typedlet]
?l :+ ?x >> snoc ?l ?x [notypes]
concat ?l1 ?l2 >> l1 ++ l2 [typedlet]
?l1 ++ ?l2 >> concat ?l1 ?l2 [notypes]

reverse (?xs :+ ?x) = x :: (reverse xs)
reverse(reverse(?l)) >> id l

// tnil, (Tree x tnil tnil), (Tree y tnil tnil), (Tree z tnil (Tree x tnil tnil)), (Tree z (Tree y tnil tnil) tnil), (Tree z (Tree y tnil tnil) (Tree x tnil tnil))

thesy (tree,) (tmap, identity, toList, reverse, switch) 3 14 0
