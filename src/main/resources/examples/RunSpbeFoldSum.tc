sum ?l = l match ((⟨⟩ => 0) / ((?x :: ?xs) => x + sum(xs))) [notypes]
fold ?f ?i ?l = l match ((⟨⟩ => id i) / ((?x :: ?xs) => fold f (f(x,i)) xs)) [notypes]

cons ?x ?l >> x :: l
?x :: ?l >> cons ?x ?l [notypes]
pl ?x ?y >> x + y
?x + ?y >> pl ?x ?y [notypes]
zero = 0

(?f: associative(int :> int :> int)) |||| (f(?x, f(?y, ?t)) ||| ?z) |>> z ||| f(f(x, y), t) [typedlet]

SPBE( ⟨⟩ , (cons : int :> list int :> list int) ) ((fold : (associative(int :> int :> int) :> int :> (list int) :> int)),) ((list int, (⟨⟩, x::⟨⟩, y::x::⟨⟩)),) 8 0
SPBE( ⟨⟩ , (cons : int :> list int :> list int) ) ((fold : (associative(int :> int :> int) :> int :> (list int) :> int)), (pl : associative(int :> int :> int))) ((list int, (⟨⟩, x::⟨⟩, y::x::⟨⟩)),) 8 0 1 1