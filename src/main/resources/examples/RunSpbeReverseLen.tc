reverse ?l = l match ((⟨⟩ => ⟨⟩) / ((?x :: ?xs) => (reverse xs) :+ x))  [notypes]
len ?l = l match ((⟨⟩ => 0) / ((?x :: ?xs) => 1 + len(xs)))  [notypes]

cons ?x ?l >> x :: l [typedlet]
?x :: ?l >> cons ?x ?l [notypes]
snoc ?l ?x >> l :+ x [typedlet]
?l :+ ?x >> snoc ?l ?x [notypes]
pl ?x ?y >> ?x + ?y [typedlet]
?x + ?y >> pl ?x ?y [notypes]

reverse (?xs :+ ?x) = x :: (reverse xs)
reverse(reverse(?l)) >> id l

SPBE ( ⟨⟩ , (cons : a :> list a :> list a) ) (0, 1, (pl : int :> int :> int), (reverse : list a :> list a), (snoc : list a :> a :> list a), (len : list a :> int)) 3 8 0

reverse(len(t)) = reverse(len(l)) [++]

reverse(len(?t)) -> len(t)
