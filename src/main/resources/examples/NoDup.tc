nodup ?l = l match ((⟨⟩ => true) / ((?x :: ?xs) => ~(elem ?x ?xs) /\ nodup ?xs))   [++]

/*
nodup = ((⟨⟩ ↦ true) / (?x :: ?xs ↦ ~(elem ?x ?xs) /\ nodup ?xs))   [++]
*/



_ /\ _ -> (1)                              [only assoc]
/* ({x} ‖ elems xs) ∧ nodup xs */
(1) -> ?nodup' {x} xs
/*GeneralizeAction - Generalizing using the term ∧{¬{‖{{.}{x}, elems{xs}}}, nodup{xs}}
  GeneralizeAction - Generalized to ={nodup'{?autovar0, ?autovar1}, ∧{¬{‖{?autovar0, elems{?autovar1}}}, nodup{?autovar1}}}*/

xs = x' :: xs'

(1) -> _ /\ _ /\ _ /\ _

// (1) -> (_ ∉ {x'}) /\ (_ ‖ _) /\ nodup xs' [lim(2)]

// (1) -> (_ ∉ {x}) /\ (_ ∉ _) /\ (_ ∉ _) /\ _

// (1) -> (_ ∉ {x}) /\ (_ ‖ _) /\ (_ ‖ _) /\ _

(1) -> (_ ∉ {x}) /\ ((_ ∪ _) ‖ _) /\ nodup _

(1) -> (_ ∉ {x}) /\ nodup' _ _    [lim(5)]

/*
x ∉ _ /\ x' ∉ _ -> 2

2 -> _ ‖ _
(_ ∪ _ ‖ _) /\ _ -> nodup' _ _
*/