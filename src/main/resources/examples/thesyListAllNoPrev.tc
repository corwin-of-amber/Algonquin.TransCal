include "List"
include "ListDefs"

//pl ?x ?y >> ?x + ?y [typedlet]
//?x + ?y >> pl ?x ?y [notypes]

//len ?l = l match ((⟨⟩ => 0) / ((?x :: ?xs) => 1 + len(xs)))  [notypes]

reverse ?l = l match ((⟨⟩ => ⟨⟩) / ((?x :: ?xs) => (reverse xs) :+ x)) [notypes]

//circ ?f ?g ?x = f(g(x))

thesy(list,) (map, snoc, concat, fold, reverse) 3 8 0
//thesy(list,) ((len : list int :> int), pl, (map : (int :> int) :> list int :> list int), (cons : int :> list int :> list int), snoc, (concat : list int :> list int :> list int), (fold : (int :> int :> int) :> int :> (list int) :> int), reverse) 3 6 0