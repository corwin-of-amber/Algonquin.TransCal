reverse ?l = l match ((⟨⟩ => ⟨⟩) / ((?x :: ?xs) => (reverse xs) :+ x))

cons ?x ?l = x :: l
snoc ?l ?x = l :+ x

SPBE ( ⟨⟩ , (cons : int :> list int :> list int) ) ((reverse : list int :> list int), (snoc : list int :> int :> list int)) ((list int, (⟨⟩, x::⟨⟩, y::x::⟨⟩)),) 8 0

reverse(reverse(f(t))) = reverse(reverse(l)) [++]

reverse(reverse(f(t))) -> f(t)
