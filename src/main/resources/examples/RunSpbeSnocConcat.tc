//reverse ?l = l match ((Nil => Nil) / ((cons ?x ?xs) => snoc (reverse xs) x)) [notypes]

concat Nil ?l2 >> id l2 [notypes]
concat cons(?x, ?xs) ?l2 >> cons(x, (concat xs l2))

snoc ?l ?x >> concat l (cons x Nil) [typedlet]
concat l (cons x Nil) >> snoc ?l ?x [notypes]

SPBE ( ⟨⟩ , (cons : int :> list int :> list int) ) ((snoc : list int :> int :> list int), (cons : int :> list int :> list int), (concat : list int :> list int :> list int)) ((list int, (⟨⟩, cons x ⟨⟩, cons(y, cons(x, ⟨⟩)))),)
